---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3
spec:
  replicas: 1
  selector:
    matchLabels:
      name: s3
  template:
    metadata:
      labels:
        name: s3
      annotations:
        prometheus.io/path: /minio/prometheus/metrics
        prometheus.io/port: "9000"
        prometheus.io.scrape: "false"
        prometheus.io.scheme: http
    spec:
      containers:
      - name: minio
        image: minio/minio
        # Create the "cortex" bucket before starting minio server.
        command: [ "sh", "-c", "mkdir /storage/cortex && minio server /storage"]
        env:
        - name: MINIO_ACCESS_KEY
          value: "cortex"
        - name: MINIO_SECRET_KEY
          value: "supersecret"
        - name: MINIO_PROMETHEUS_AUTH_TYPE
          value: "public"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: storage
          mountPath: "/storage"
      volumes:
      - name: storage
#        emptyDir: {}
